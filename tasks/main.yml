---
- name: Collects local facts
  ansible.builtin.setup:
    filter:
      - ansible_local
  when: false
- name: Checks if platform is already exist
  ansible.builtin.stat:
    path: "{{ ansible_local['metatrader'][metatrader_version | string].path }}"
  register: stat_mt
  when: ansible_local['metatrader'] is defined
- name: Ensures platform is installed
  when:
    - ansible_local['metatrader'] is not defined
    - ansible_os_family != "Windows"  # gather_facts is required.
    - (stat_mt.stat is not defined) or (not stat_mt.stat.exists)
  block:

    - name: Validates variables
      ansible.builtin.assert:
        that:
          - metatrader_setup_url | length > 0

    - name: Checks if platform is already installed
      register: file_mt_installed_exists
      ansible.builtin.stat:
        path: ~/.wine/.installed-mt{{ metatrader_version }}
      when:
        - ansible_os_family != "Windows"
    - name: Ensures Curl is present
      ansible.builtin.package:
        name: curl
        state: present
      when:
        - ansible_os_family not in ["Windows", "OtherLinux"]
        - not file_mt_installed_exists.stat.exists
    - name: Ensures verb installation file is present
      ansible.builtin.template:
        src: mt{{ metatrader_version }}_install.verb.j2
        dest: /tmp/mt{{ metatrader_version }}_install.verb
        mode: "0640"
      when:
        - not file_mt_installed_exists.stat.exists

    - name: Ensures MetaTrader is installed (via verb file)
      ansible.builtin.shell:
        # @todo: The winetricks command is executed directly without specifying the executable.
        # noqa command-instead-of-shell
        cmd: >
          winetricks -q /tmp/mt{{ metatrader_version }}_install.verb
          && touch ~/.wine/.installed-mt{{ metatrader_version }}
        creates: ~/.wine/.installed-mt{{ metatrader_version }}
      environment:
        DISPLAY: ":0"
        WINEDLLOVERRIDES: mscoree,mshtml=,winebrowser.exe=
        WINETRICKS_DOWNLOADER: curl
      when:
        - not file_mt_installed_exists.stat.exists

    - name: Ensures verb installation file is absent
      ansible.builtin.file:
        path: /tmp/mt{{ metatrader_version }}_install.verb
        state: absent

- name: Verifies
  ansible.builtin.include_tasks: verify.yml
  tags:
    - metatrader_verify

- name: Saves platform facts
  become: "{{ (ansible_user_id is defined and ansible_user_id != 'root') or (ansible_os_family == 'Windows') }}"
  become_method: "{{ metatrader_become_method[ansible_os_family] }}"
  when:
    - >-
      ansible_local['metatrader'] is not defined
      or (find_mt_path_folder)
      != ansible_local['metatrader'][metatrader_version | string].path
  block:
    - name: Sets fact
      ansible.builtin.set_fact:
        cacheable: true
        metatrader: >-
          {
            '{{ metatrader_version | int }}':
              {
                'path': '{{ find_mt_path_folder | dirname }}'
              }
          }
      when:
        - find_mt_path_folder is defined
        - find_mt_path_folder | length > 0
        - metatrader_version is defined
    - name: Ensures that Ansible local facts directory exists (Unix)
      ansible.builtin.file:
        path: /etc/ansible/facts.d
        state: directory
        mode: "0755"
      when: ansible_os_family != "Windows"
    - name: Ensures that Ansible local facts directory exists (Windows)
      ansible.windows.win_file:
        # yamllint disable-line rule:line-length
        path: \\wsl.localhost\{{ wsl_distribution_name }}\home\{{ wsl_user_name }}\ansible\facts
        state: directory
      become: true
      become_method: "{{ metatrader_become_method[ansible_os_family] }}"
      become_user: "{{ ansible_env.USERNAME }}"
      when: ansible_os_family == "Windows"
    - name: Saves role's facts (Unix)
      ansible.builtin.copy:
        content: "{{ ansible_facts['metatrader'] }}"
        dest: /etc/ansible/facts.d/metatrader.fact
        mode: "0644"
      when: ansible_os_family != "Windows"
    - name: Saves role's facts (Windows)
      ansible.windows.win_copy:
        content: "{{ ansible_facts['metatrader'] }}"
        # yamllint disable-line rule:line-length
        dest: \\wsl.localhost\{{ wsl_distribution_name }}\home\{{ wsl_user_name }}\ansible\facts\metatrader.fact
      become: true
      become_method: "{{ metatrader_become_method[ansible_os_family] }}"
      become_user: "{{ ansible_env.USERNAME }}"
      when: ansible_os_family == "Windows"
